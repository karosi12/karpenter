name: Provision AWS EKS Infrastructure

on:
  push:
    branches:
      - main
      - ft-cicd

jobs:
  eks-0:
    name: Run Terraform 0-eks
    runs-on: ubuntu-latest
      
    env:
      CLUSTER_ID: ${{ secrets.CLUSTER_ID }}
      VPC_NAME: ${{ secrets.VPC_NAME }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      REGION: ${{ secrets.REGION }}
      AZ1: ${{ secrets.AZ1 }}
      AZ2: ${{ secrets.AZ2 }}
      CIDR_BLOCK: ${{ secrets.CIDR_BLOCK }}
      ACCOUNT_ID: ${{ secrets.ACCOUNT_ID }}
      PRIVATE_SUBNET1: ${{ secrets.PRIVATE_SUBNET1 }}
      PRIVATE_SUBNET2: ${{ secrets.PRIVATE_SUBNET2 }}
      PUBLIC_SUBNET1: ${{ vars.PUBLIC_SUBNET1 }}
      PUBLIC_SUBNET2: ${{ vars.PUBLIC_SUBNET2 }}
      CAPACITY_TYPE: ${{ vars.CAPACITY_TYPE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set execution permissions
        working-directory: 0-eks
        run: ls && chmod +x generate_tfvars.sh

      - name: Generate terraform.tfvars
        working-directory: 0-eks
        run: ./generate_tfvars.sh

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_CLI_CONFIG }}
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform init
        working-directory: 0-eks

      - name: Plan Terraform deployment
        run: terraform plan -out=tfplan
        working-directory: 0-eks

      - name: Apply Terraform deployment
        run: terraform apply -auto-approve tfplan
        working-directory: 0-eks